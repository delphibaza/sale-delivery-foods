import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Input } from '@/components/ui/input';
import { Textarea } from '@/components/ui/textarea';
import { Label } from '@/components/ui/label';
import Header from '@/components/Header';
import Footer from '@/components/Footer';
import { 
  Star, 
  ThumbsUp, 
  MessageCircle, 
  Filter,
  Search,
  TrendingUp,
  Award,
  Users,
  Calendar
} from 'lucide-react';

const Reviews = () => {
  const [selectedRating, setSelectedRating] = useState('all');
  const [searchTerm, setSearchTerm] = useState('');
  const [newReview, setNewReview] = useState({
    rating: 5,
    title: '',
    text: '',
    restaurant: '',
    order: ''
  });

  const reviews = [
    {
      id: 1,
      author: "–ê–Ω–Ω–∞ –ü.",
      rating: 5,
      date: "2024-01-15",
      title: "–û—Ç–ª–∏—á–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞!",
      text: "–ó–∞–∫–∞–∑—ã–≤–∞–ª–∞ –ø–∏—Ü—Ü—É –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞. –î–æ—Å—Ç–∞–≤–∏–ª–∏ –±—ã—Å—Ç—Ä–æ, –µ–¥–∞ –≥–æ—Ä—è—á–∞—è –∏ –æ—á–µ–Ω—å –≤–∫—É—Å–Ω–∞—è. –ö—É—Ä—å–µ—Ä –±—ã–ª –≤–µ–∂–ª–∏–≤—ã–π. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∑–∞–∫–∞–∂—É –µ—â–µ!",
      restaurant: "–ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π –¥–≤–æ—Ä–∏–∫",
      order: "#1001",
      likes: 12,
      helpful: true,
      verified: true,
      photos: ["üçï"]
    },
    {
      id: 2,
      author: "–ú–∏—Ö–∞–∏–ª –ò.",
      rating: 4,
      date: "2024-01-14",
      title: "–•–æ—Ä–æ—à–æ, –Ω–æ –µ—Å—Ç—å –∑–∞–º–µ—á–∞–Ω–∏—è",
      text: "–°—É—à–∏ —Å–≤–µ–∂–∏–µ, –∫–∞—á–µ—Å—Ç–≤–æ —Ö–æ—Ä–æ—à–µ–µ. –ù–æ –¥–æ—Å—Ç–∞–≤–∫–∞ –∑–∞–¥–µ—Ä–∂–∞–ª–∞—Å—å –Ω–∞ 15 –º–∏–Ω—É—Ç. –í —Ü–µ–ª–æ–º –¥–æ–≤–æ–ª–µ–Ω, –Ω–æ —Ö–æ—Ç–µ–ª–æ—Å—å –±—ã —Ç–æ—á–Ω–æ—Å—Ç–∏ –≤–æ –≤—Ä–µ–º–µ–Ω–∏.",
      restaurant: "–°—É—à–∏ –ú–∞—Å—Ç–µ—Ä",
      order: "#1002",
      likes: 8,
      helpful: false,
      verified: true,
      photos: ["üç£", "ü•¢"]
    },
    {
      id: 3,
      author: "–ï–ª–µ–Ω–∞ –°.",
      rating: 5,
      date: "2024-01-13",
      title: "–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ!",
      text: "–ó–∞–∫–∞–∑—ã–≤–∞–ª–∞ –Ω–∞ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤. –í—Å–µ –±—ã–ª–æ –∏–¥–µ–∞–ª—å–Ω–æ: –≤–æ–≤—Ä–µ–º—è, –≥–æ—Ä—è—á–µ–µ, –≤–∫—É—Å–Ω–æ–µ. –ö–æ–ª–ª–µ–≥–∏ –æ—Å—Ç–∞–ª–∏—Å—å –¥–æ–≤–æ–ª—å–Ω—ã. –°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∏–∑–º!",
      restaurant: "Burger House",
      order: "#1003",
      likes: 15,
      helpful: true,
      verified: true,
      photos: ["üçî", "üçü"]
    },
    {
      id: 4,
      author: "–î–º–∏—Ç—Ä–∏–π –ö.",
      rating: 3,
      date: "2024-01-12",
      title: "–°—Ä–µ–¥–Ω–µ",
      text: "–ï–¥–∞ –Ω–æ—Ä–º–∞–ª—å–Ω–∞—è, –Ω–æ –Ω–∏—á–µ–≥–æ –æ—Å–æ–±–µ–Ω–Ω–æ–≥–æ. –¶–µ–Ω—ã –∑–∞–≤—ã—à–µ–Ω—ã –¥–ª—è —Ç–∞–∫–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞. –î–æ—Å—Ç–∞–≤–∫–∞ –±—ã–ª–∞ –±—ã—Å—Ç—Ä–æ–π.",
      restaurant: "–î—Ä–∞–∫–æ–Ω",
      order: "#1004",
      likes: 3,
      helpful: false,
      verified: true,
      photos: []
    },
    {
      id: 5,
      author: "–û–ª—å–≥–∞ –í.",
      rating: 5,
      date: "2024-01-11",
      title: "–õ—É—á—à–∏–π —Å–µ—Ä–≤–∏—Å –¥–æ—Å—Ç–∞–≤–∫–∏!",
      text: "–ü–æ–ª—å–∑—É—é—Å—å —É–∂–µ –ø–æ–ª–≥–æ–¥–∞. –í—Å–µ–≥–¥–∞ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ, –±—ã—Å—Ç—Ä–æ, –≤–µ–∂–ª–∏–≤–æ. –û—Å–æ–±–µ–Ω–Ω–æ –Ω—Ä–∞–≤–∏—Ç—Å—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Ç—Å–ª–µ–¥–∏—Ç—å –∑–∞–∫–∞–∑. –†–µ–∫–æ–º–µ–Ω–¥—É—é –≤—Å–µ–º!",
      restaurant: "–¢–∞–π—Å–∫–∏–π —Å–∞–¥",
      order: "#1005",
      likes: 20,
      helpful: true,
      verified: true,
      photos: ["üçú", "üå∂Ô∏è"]
    },
    {
      id: 6,
      author: "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –†.",
      rating: 2,
      date: "2024-01-10",
      title: "–†–∞–∑–æ—á–∞—Ä–æ–≤–∞–Ω",
      text: "–ó–∞–∫–∞–∑ –ø—Ä–∏—à–µ–ª —Ö–æ–ª–æ–¥–Ω—ã–º, –ø–∏—Ü—Ü–∞ –±—ã–ª–∞ –ø–µ—Ä–µ—Å—É—à–µ–Ω–Ω–æ–π. –ö—É—Ä—å–µ—Ä –∏–∑–≤–∏–Ω–∏–ª—Å—è, –Ω–æ —ç—Ç–æ –Ω–µ –∏—Å–ø—Ä–∞–≤–∏–ª–æ —Å–∏—Ç—É–∞—Ü–∏—é. –ù–∞–¥–µ—é—Å—å, —ç—Ç–æ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ.",
      restaurant: "–ü–∏—Ü—Ü–µ—Ä–∏—è –ù–µ–∞–ø–æ–ª—å",
      order: "#1006",
      likes: 1,
      helpful: false,
      verified: true,
      photos: []
    }
  ];

  const stats = [
    { label: "–û–±—â–∏–π —Ä–µ–π—Ç–∏–Ω–≥", value: "4.6", icon: <Star className="w-6 h-6 text-yellow-500" /> },
    { label: "–í—Å–µ–≥–æ –æ—Ç–∑—ã–≤–æ–≤", value: "2,847", icon: <MessageCircle className="w-6 h-6 text-blue-500" /> },
    { label: "–î–æ–≤–æ–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤", value: "94%", icon: <ThumbsUp className="w-6 h-6 text-green-500" /> },
    { label: "–°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞ –∑–∞ –º–µ—Å—è—Ü", value: "4.7", icon: <TrendingUp className="w-6 h-6 text-purple-500" /> }
  ];

  const ratingDistribution = [
    { stars: 5, count: 1420, percentage: 85 },
    { stars: 4, count: 284, percentage: 15 },
    { stars: 3, count: 142, percentage: 8 },
    { stars: 2, count: 71, percentage: 4 },
    { stars: 1, count: 28, percentage: 2 }
  ];

  const topRestaurants = [
    { name: "–°—É—à–∏ –ú–∞—Å—Ç–µ—Ä", rating: 4.9, reviews: 456 },
    { name: "–ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π –¥–≤–æ—Ä–∏–∫", rating: 4.8, reviews: 523 },
    { name: "Burger House", rating: 4.7, reviews: 389 },
    { name: "–¢–∞–π—Å–∫–∏–π —Å–∞–¥", rating: 4.6, reviews: 267 }
  ];

  const filteredReviews = reviews.filter(review => {
    const matchesRating = selectedRating === 'all' || review.rating.toString() === selectedRating;
    const matchesSearch = review.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
                         review.text.toLowerCase().includes(searchTerm.toLowerCase()) ||
                         review.restaurant.toLowerCase().includes(searchTerm.toLowerCase());
    return matchesRating && matchesSearch;
  });

  const renderStars = (rating: number, size: string = "w-4 h-4") => {
    return [...Array(5)].map((_, i) => (
      <Star
        key={i}
        className={`${size} ${i < rating ? 'text-yellow-400 fill-current' : 'text-gray-300'}`}
      />
    ));
  };

  const handleSubmitReview = (e: React.FormEvent) => {
    e.preventDefault();
    console.log('New review:', newReview);
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–∑—ã–≤–∞
  };

  return (
    <div className="min-h-screen bg-gray-50">
      <Header />
      
      <div className="container mx-auto px-4 py-8">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="text-center mb-12">
          <h1 className="text-4xl font-bold mb-4">–û—Ç–∑—ã–≤—ã –∫–ª–∏–µ–Ω—Ç–æ–≤</h1>
          <p className="text-xl text-gray-600 max-w-2xl mx-auto">
            –ß–∏—Ç–∞–π—Ç–µ –æ—Ç–∑—ã–≤—ã –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏ –¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º –æ–ø—ã—Ç–æ–º
          </p>
        </div>

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
        <section className="mb-12">
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
            {stats.map((stat, index) => (
              <Card key={index} className="text-center hover:shadow-lg transition-shadow">
                <CardContent className="p-6">
                  <div className="flex justify-center mb-3">
                    {stat.icon}
                  </div>
                  <div className="text-3xl font-bold text-gray-800 mb-2">{stat.value}</div>
                  <div className="text-gray-600">{stat.label}</div>
                </CardContent>
              </Card>
            ))}
          </div>
        </section>

        {/* –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ—Ü–µ–Ω–æ–∫ –∏ —Ç–æ–ø —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã */}
        <section className="mb-12">
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
            {/* –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ—Ü–µ–Ω–æ–∫ */}
            <Card>
              <CardHeader>
                <CardTitle>–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ—Ü–µ–Ω–æ–∫</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-3">
                  {ratingDistribution.map((item) => (
                    <div key={item.stars} className="flex items-center gap-3">
                      <div className="flex items-center gap-1 w-16">
                        <span className="text-sm font-medium">{item.stars}</span>
                        <Star className="w-4 h-4 text-yellow-400 fill-current" />
                      </div>
                      <div className="flex-1 bg-gray-200 rounded-full h-2">
                        <div 
                          className="bg-yellow-400 h-2 rounded-full" 
                          style={{ width: `${item.percentage}%` }}
                        ></div>
                      </div>
                      <span className="text-sm text-gray-600 w-12">{item.count}</span>
                    </div>
                  ))}
                </div>
              </CardContent>
            </Card>

            {/* –¢–æ–ø —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã */}
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Award className="w-5 h-5 text-orange-500" />
                  –õ—É—á—à–∏–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  {topRestaurants.map((restaurant, index) => (
                    <div key={index} className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                      <div>
                        <h3 className="font-semibold">{restaurant.name}</h3>
                        <div className="flex items-center gap-2">
                          <div className="flex">
                            {renderStars(Math.floor(restaurant.rating))}
                          </div>
                          <span className="text-sm text-gray-600">
                            {restaurant.rating} ({restaurant.reviews} –æ—Ç–∑—ã–≤–æ–≤)
                          </span>
                        </div>
                      </div>
                      <Badge className="bg-orange-100 text-orange-800">
                        #{index + 1}
                      </Badge>
                    </div>
                  ))}
                </div>
              </CardContent>
            </Card>
          </div>
        </section>

        {/* –§–∏–ª—å—Ç—Ä—ã –∏ –ø–æ–∏—Å–∫ */}
        <section className="mb-8">
          <div className="flex flex-col lg:flex-row gap-4 mb-6">
            <div className="relative flex-1">
              <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5" />
              <Input
                placeholder="–ü–æ–∏—Å–∫ –ø–æ –æ—Ç–∑—ã–≤–∞–º..."
                value={searchTerm}
                onChange={(e) => setSearchTerm(e.target.value)}
                className="pl-10"
              />
            </div>
            <div className="flex gap-2">
              <Button
                variant={selectedRating === 'all' ? 'default' : 'outline'}
                onClick={() => setSelectedRating('all')}
                className={selectedRating === 'all' ? 'bg-orange-500 hover:bg-orange-600' : ''}
              >
                –í—Å–µ
              </Button>
              {[5, 4, 3, 2, 1].map((rating) => (
                <Button
                  key={rating}
                  variant={selectedRating === rating.toString() ? 'default' : 'outline'}
                  onClick={() => setSelectedRating(rating.toString())}
                  className={selectedRating === rating.toString() ? 'bg-orange-500 hover:bg-orange-600' : ''}
                >
                  {rating} ‚≠ê
                </Button>
              ))}
            </div>
          </div>
        </section>

        {/* –û—Ç–∑—ã–≤—ã */}
        <section className="mb-12">
          <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
            {/* –°–ø–∏—Å–æ–∫ –æ—Ç–∑—ã–≤–æ–≤ */}
            <div className="lg:col-span-2">
              <h2 className="text-2xl font-bold mb-6">
                –û—Ç–∑—ã–≤—ã –∫–ª–∏–µ–Ω—Ç–æ–≤ ({filteredReviews.length})
              </h2>
              <div className="space-y-6">
                {filteredReviews.map((review) => (
                  <Card key={review.id} className="hover:shadow-lg transition-shadow">
                    <CardContent className="p-6">
                      <div className="flex justify-between items-start mb-4">
                        <div className="flex items-center gap-3">
                          <div className="w-10 h-10 bg-orange-100 rounded-full flex items-center justify-center">
                            <Users className="w-5 h-5 text-orange-500" />
                          </div>
                          <div>
                            <div className="flex items-center gap-2">
                              <span className="font-semibold">{review.author}</span>
                              {review.verified && (
                                <Badge className="bg-green-100 text-green-800 text-xs">
                                  –ü—Ä–æ–≤–µ—Ä–µ–Ω
                                </Badge>
                              )}
                            </div>
                            <div className="flex items-center gap-2 text-sm text-gray-600">
                              <Calendar className="w-4 h-4" />
                              {new Date(review.date).toLocaleDateString('ru-RU')}
                            </div>
                          </div>
                        </div>
                        <div className="flex">
                          {renderStars(review.rating)}
                        </div>
                      </div>

                      <h3 className="text-lg font-semibold mb-2">{review.title}</h3>
                      <p className="text-gray-600 mb-4">{review.text}</p>

                      <div className="flex items-center gap-4 mb-4 text-sm text-gray-500">
                        <span>–†–µ—Å—Ç–æ—Ä–∞–Ω: {review.restaurant}</span>
                        <span>–ó–∞–∫–∞–∑: {review.order}</span>
                      </div>

                      {review.photos.length > 0 && (
                        <div className="flex gap-2 mb-4">
                          {review.photos.map((photo, index) => (
                            <div key={index} className="text-2xl">{photo}</div>
                          ))}
                        </div>
                      )}

                      <div className="flex items-center justify-between">
                        <div className="flex items-center gap-4">
                          <Button variant="ghost" size="sm" className="text-gray-500">
                            <ThumbsUp className="w-4 h-4 mr-1" />
                            –ü–æ–ª–µ–∑–Ω–æ ({review.likes})
                          </Button>
                          <Button variant="ghost" size="sm" className="text-gray-500">
                            <MessageCircle className="w-4 h-4 mr-1" />
                            –û—Ç–≤–µ—Ç–∏—Ç—å
                          </Button>
                        </div>
                        {review.helpful && (
                          <Badge className="bg-blue-100 text-blue-800">
                            –ü–æ–ª–µ–∑–Ω—ã–π –æ—Ç–∑—ã–≤
                          </Badge>
                        )}
                      </div>
                    </CardContent>
                  </Card>
                ))}
              </div>
            </div>

            {/* –§–æ—Ä–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞ */}
            <div>
              <Card className="sticky top-8">
                <CardHeader>
                  <CardTitle>–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤</CardTitle>
                </CardHeader>
                <CardContent>
                  <form onSubmit={handleSubmitReview} className="space-y-4">
                    <div>
                      <Label>–û—Ü–µ–Ω–∫–∞</Label>
                      <div className="flex gap-1 mt-2">
                        {[1, 2, 3, 4, 5].map((star) => (
                          <button
                            key={star}
                            type="button"
                            onClick={() => setNewReview({...newReview, rating: star})}
                            className="p-1"
                          >
                            <Star
                              className={`w-6 h-6 ${
                                star <= newReview.rating 
                                  ? 'text-yellow-400 fill-current' 
                                  : 'text-gray-300'
                              }`}
                            />
                          </button>
                        ))}
                      </div>
                    </div>

                    <div>
                      <Label htmlFor="title">–ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ—Ç–∑—ã–≤–∞</Label>
                      <Input
                        id="title"
                        value={newReview.title}
                        onChange={(e) => setNewReview({...newReview, title: e.target.value})}
                        placeholder="–ö—Ä–∞—Ç–∫–æ –æ–ø–∏—à–∏—Ç–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ"
                      />
                    </div>

                    <div>
                      <Label htmlFor="restaurant">–†–µ—Å—Ç–æ—Ä–∞–Ω</Label>
                      <Input
                        id="restaurant"
                        value={newReview.restaurant}
                        onChange={(e) => setNewReview({...newReview, restaurant: e.target.value})}
                        placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞"
                      />
                    </div>

                    <div>
                      <Label htmlFor="order">–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)</Label>
                      <Input
                        id="order"
                        value={newReview.order}
                        onChange={(e) => setNewReview({...newReview, order: e.target.value})}
                        placeholder="#1234"
                      />
                    </div>

                    <div>
                      <Label htmlFor="text">–û—Ç–∑—ã–≤</Label>
                      <Textarea
                        id="text"
                        rows={4}
                        value={newReview.text}
                        onChange={(e) => setNewReview({...newReview, text: e.target.value})}
                        placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ —Å–≤–æ–µ–º –æ–ø—ã—Ç–µ..."
                      />
                    </div>

                    <Button type="submit" className="w-full bg-orange-500 hover:bg-orange-600">
                      –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –æ—Ç–∑—ã–≤
                    </Button>
                  </form>
                </CardContent>
              </Card>
            </div>
          </div>
        </section>

        {/* –ü—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é */}
        <section>
          <Card className="bg-gradient-to-r from-orange-500 to-red-500 text-white">
            <CardContent className="p-8 text-center">
              <h2 className="text-3xl font-bold mb-4">–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º –æ–ø—ã—Ç–æ–º</h2>
              <p className="text-xl mb-6">
                –í–∞—à –æ—Ç–∑—ã–≤ –ø–æ–º–æ–∂–µ—Ç –¥—Ä—É–≥–∏–º –∫–ª–∏–µ–Ω—Ç–∞–º —Å–¥–µ–ª–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤—ã–±–æ—Ä
              </p>
              <div className="flex flex-col sm:flex-row gap-4 justify-center">
                <Button className="bg-white text-orange-500 hover:bg-gray-100">
                  –ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤
                </Button>
                <Button variant="outline" className="border-white text-white hover:bg-white hover:text-orange-500">
                  –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∏ –æ—Ç–∑—ã–≤—ã
                </Button>
              </div>
            </CardContent>
          </Card>
        </section>
      </div>

      <Footer />
    </div>
  );
};

export default Reviews;