import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Input } from '@/components/ui/input';
import Header from '@/components/Header';
import Footer from '@/components/Footer';
import { 
  Gift, 
  Percent, 
  Clock, 
  Users,
  Star,
  Calendar,
  Tag,
  Zap
} from 'lucide-react';

const Promotions = () => {
  const [promoCode, setPromoCode] = useState('');

  const activePromotions = [
    {
      id: 1,
      title: "–°–∫–∏–¥–∫–∞ 30% –Ω–∞ –ø–µ—Ä–≤—ã–π –∑–∞–∫–∞–∑",
      description: "–î–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—Ä–∏ –∑–∞–∫–∞–∑–µ –æ—Ç 1000‚ÇΩ",
      code: "FIRST30",
      discount: 30,
      validUntil: "2024-02-29",
      minOrder: 1000,
      type: "new_user",
      image: "üéâ",
      featured: true
    },
    {
      id: 2,
      title: "–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞",
      description: "–ü—Ä–∏ –∑–∞–∫–∞–∑–µ –æ—Ç 1500‚ÇΩ –¥–æ—Å—Ç–∞–≤–∫–∞ –±–µ—Å–ø–ª–∞—Ç–Ω–æ",
      code: "FREEDEL",
      discount: 0,
      validUntil: "2024-03-31",
      minOrder: 1500,
      type: "delivery",
      image: "üöö",
      featured: true
    },
    {
      id: 3,
      title: "–ü–∏—Ü—Ü–∞ + –Ω–∞–ø–∏—Ç–æ–∫ = —Å–∫–∏–¥–∫–∞ 20%",
      description: "–ü—Ä–∏ –∑–∞–∫–∞–∑–µ –ª—é–±–æ–π –ø–∏—Ü—Ü—ã –∏ –Ω–∞–ø–∏—Ç–∫–∞",
      code: "PIZZA20",
      discount: 20,
      validUntil: "2024-02-15",
      minOrder: 0,
      type: "combo",
      image: "üçï",
      featured: false
    },
    {
      id: 4,
      title: "–°—É—à–∏-—Å–µ—Ç —Å–æ —Å–∫–∏–¥–∫–æ–π 25%",
      description: "–ù–∞ –≤—Å–µ —Å—É—à–∏-—Å–µ—Ç—ã –ø–æ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å—è–º",
      code: "SUSHI25",
      discount: 25,
      validUntil: "2024-12-31",
      minOrder: 800,
      type: "weekend",
      image: "üç£",
      featured: false
    },
    {
      id: 5,
      title: "–°—á–∞—Å—Ç–ª–∏–≤—ã–µ —á–∞—Å—ã",
      description: "–°–∫–∏–¥–∫–∞ 15% —Å 14:00 –¥–æ 16:00",
      code: "HAPPY15",
      discount: 15,
      validUntil: "2024-12-31",
      minOrder: 500,
      type: "time",
      image: "‚è∞",
      featured: false
    },
    {
      id: 6,
      title: "–î—Ä—É–∑—å—è –ø—Ä–∏–Ω–æ—Å—è—Ç —Å–∫–∏–¥–∫–∏",
      description: "–ü—Ä–∏–≥–ª–∞—Å–∏ –¥—Ä—É–≥–∞ –∏ –ø–æ–ª—É—á–∏ 200‚ÇΩ –Ω–∞ —Å—á–µ—Ç",
      code: "FRIEND200",
      discount: 0,
      validUntil: "2024-12-31",
      minOrder: 0,
      type: "referral",
      image: "üë•",
      featured: true
    }
  ];

  const expiredPromotions = [
    {
      id: 7,
      title: "–ù–æ–≤–æ–≥–æ–¥–Ω—è—è –∞–∫—Ü–∏—è",
      description: "–°–∫–∏–¥–∫–∞ 40% –Ω–∞ –≤—Å–µ –∑–∞–∫–∞–∑—ã",
      code: "NY2024",
      discount: 40,
      validUntil: "2024-01-10",
      image: "üéÑ"
    },
    {
      id: 8,
      title: "–î–µ–Ω—å —Å–≤—è—Ç–æ–≥–æ –í–∞–ª–µ–Ω—Ç–∏–Ω–∞",
      description: "–†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π —É–∂–∏–Ω —Å–æ —Å–∫–∏–¥–∫–æ–π 35%",
      code: "LOVE35",
      discount: 35,
      validUntil: "2024-02-14",
      image: "üíù"
    }
  ];

  const getTypeIcon = (type: string) => {
    switch (type) {
      case 'new_user': return <Users className="w-4 h-4" />;
      case 'delivery': return <Gift className="w-4 h-4" />;
      case 'combo': return <Star className="w-4 h-4" />;
      case 'weekend': return <Calendar className="w-4 h-4" />;
      case 'time': return <Clock className="w-4 h-4" />;
      case 'referral': return <Users className="w-4 h-4" />;
      default: return <Tag className="w-4 h-4" />;
    }
  };

  const getTypeName = (type: string) => {
    switch (type) {
      case 'new_user': return '–î–ª—è –Ω–æ–≤–∏—á–∫–æ–≤';
      case 'delivery': return '–î–æ—Å—Ç–∞–≤–∫–∞';
      case 'combo': return '–ö–æ–º–±–æ';
      case 'weekend': return '–í—ã—Ö–æ–¥–Ω—ã–µ';
      case 'time': return '–í—Ä–µ–º—è';
      case 'referral': return '–î—Ä—É–∑—å—è';
      default: return '–ê–∫—Ü–∏—è';
    }
  };

  const copyPromoCode = (code: string) => {
    navigator.clipboard.writeText(code);
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏
  };

  return (
    <div className="min-h-screen bg-gray-50">
      <Header />
      
      <div className="container mx-auto px-4 py-8">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="text-center mb-12">
          <h1 className="text-4xl font-bold mb-4">–ê–∫—Ü–∏–∏ –∏ —Å–∫–∏–¥–∫–∏</h1>
          <p className="text-xl text-gray-600 max-w-2xl mx-auto">
            –≠–∫–æ–Ω–æ–º—å—Ç–µ –Ω–∞ –ª—é–±–∏–º—ã—Ö –±–ª—é–¥–∞—Ö —Å –Ω–∞—à–∏–º–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–º–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º–∏
          </p>
        </div>

        {/* –ü—Ä–æ–º–æ–∫–æ–¥ */}
        <section className="mb-12">
          <Card className="bg-gradient-to-r from-orange-500 to-red-500 text-white">
            <CardContent className="p-8 text-center">
              <Gift className="w-12 h-12 mx-auto mb-4" />
              <h2 className="text-2xl font-bold mb-4">–ï—Å—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥?</h2>
              <p className="mb-6">–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥ –∏ –ø–æ–ª—É—á–∏—Ç–µ —Å–∫–∏–¥–∫—É –Ω–∞ –∑–∞–∫–∞–∑</p>
              <div className="flex flex-col sm:flex-row gap-4 max-w-md mx-auto">
                <Input
                  placeholder="–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥"
                  value={promoCode}
                  onChange={(e) => setPromoCode(e.target.value)}
                  className="bg-white text-black"
                />
                <Button className="bg-white text-orange-500 hover:bg-gray-100">
                  –ü—Ä–∏–º–µ–Ω–∏—Ç—å
                </Button>
              </div>
            </CardContent>
          </Card>
        </section>

        {/* –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –∞–∫—Ü–∏–∏ */}
        <section className="mb-12">
          <h2 className="text-3xl font-bold mb-8">üî• –ì–æ—Ä—è—á–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è</h2>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {activePromotions.filter(promo => promo.featured).map((promo) => (
              <Card key={promo.id} className="hover:shadow-lg transition-shadow border-2 border-orange-200">
                <CardContent className="p-6">
                  <div className="flex justify-between items-start mb-4">
                    <div className="text-4xl">{promo.image}</div>
                    <div className="flex flex-col gap-2">
                      <Badge className="bg-red-100 text-red-800">
                        <Zap className="w-3 h-3 mr-1" />
                        –•–ò–¢
                      </Badge>
                      {promo.discount > 0 && (
                        <Badge className="bg-green-100 text-green-800">
                          -{promo.discount}%
                        </Badge>
                      )}
                    </div>
                  </div>
                  
                  <h3 className="text-xl font-semibold mb-2">{promo.title}</h3>
                  <p className="text-gray-600 mb-4">{promo.description}</p>
                  
                  <div className="space-y-2 mb-4">
                    <div className="flex items-center gap-2 text-sm">
                      <Badge variant="outline" className="text-xs">
                        {getTypeIcon(promo.type)}
                        {getTypeName(promo.type)}
                      </Badge>
                    </div>
                    
                    {promo.minOrder > 0 && (
                      <p className="text-sm text-gray-500">
                        –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∑–∞–∫–∞–∑: {promo.minOrder}‚ÇΩ
                      </p>
                    )}
                    
                    <div className="flex items-center gap-2 text-sm text-gray-500">
                      <Clock className="w-4 h-4" />
                      –î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ {new Date(promo.validUntil).toLocaleDateString('ru-RU')}
                    </div>
                  </div>
                  
                  <div className="flex gap-2">
                    <Button 
                      className="flex-1 bg-orange-500 hover:bg-orange-600"
                      onClick={() => copyPromoCode(promo.code)}
                    >
                      {promo.code}
                    </Button>
                    <Button variant="outline" size="sm">
                      –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
                    </Button>
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>
        </section>

        {/* –í—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –∞–∫—Ü–∏–∏ */}
        <section className="mb-12">
          <h2 className="text-3xl font-bold mb-8">–í—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –∞–∫—Ü–∏–∏</h2>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {activePromotions.map((promo) => (
              <Card key={promo.id} className="hover:shadow-lg transition-shadow">
                <CardContent className="p-6">
                  <div className="flex justify-between items-start mb-4">
                    <div className="text-4xl">{promo.image}</div>
                    <div className="flex flex-col gap-2">
                      {promo.featured && (
                        <Badge className="bg-red-100 text-red-800">
                          <Zap className="w-3 h-3 mr-1" />
                          –•–ò–¢
                        </Badge>
                      )}
                      {promo.discount > 0 && (
                        <Badge className="bg-green-100 text-green-800">
                          -{promo.discount}%
                        </Badge>
                      )}
                    </div>
                  </div>
                  
                  <h3 className="text-xl font-semibold mb-2">{promo.title}</h3>
                  <p className="text-gray-600 mb-4">{promo.description}</p>
                  
                  <div className="space-y-2 mb-4">
                    <div className="flex items-center gap-2 text-sm">
                      <Badge variant="outline" className="text-xs">
                        {getTypeIcon(promo.type)}
                        {getTypeName(promo.type)}
                      </Badge>
                    </div>
                    
                    {promo.minOrder > 0 && (
                      <p className="text-sm text-gray-500">
                        –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∑–∞–∫–∞–∑: {promo.minOrder}‚ÇΩ
                      </p>
                    )}
                    
                    <div className="flex items-center gap-2 text-sm text-gray-500">
                      <Clock className="w-4 h-4" />
                      –î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ {new Date(promo.validUntil).toLocaleDateString('ru-RU')}
                    </div>
                  </div>
                  
                  <div className="flex gap-2">
                    <Button 
                      className="flex-1 bg-orange-500 hover:bg-orange-600"
                      onClick={() => copyPromoCode(promo.code)}
                    >
                      {promo.code}
                    </Button>
                    <Button variant="outline" size="sm">
                      –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
                    </Button>
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>
        </section>

        {/* –ü—Ä–æ–≥—Ä–∞–º–º–∞ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏ */}
        <section className="mb-12">
          <Card className="bg-gradient-to-r from-purple-500 to-pink-500 text-white">
            <CardContent className="p-8">
              <div className="grid grid-cols-1 lg:grid-cols-2 gap-8 items-center">
                <div>
                  <h2 className="text-3xl font-bold mb-4">–ü—Ä–æ–≥—Ä–∞–º–º–∞ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏</h2>
                  <p className="text-xl mb-6">
                    –ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ –±–æ–Ω—É—Å—ã —Å –∫–∞–∂–¥—ã–º –∑–∞–∫–∞–∑–æ–º –∏ —Ç—Ä–∞—Ç—å—Ç–µ –∏—Ö –Ω–∞ –Ω–æ–≤—ã–µ –ø–æ–∫—É–ø–∫–∏
                  </p>
                  <div className="space-y-3">
                    <div className="flex items-center gap-3">
                      <Star className="w-5 h-5" />
                      <span>1 –±–æ–Ω—É—Å –∑–∞ –∫–∞–∂–¥—ã–µ 10‚ÇΩ</span>
                    </div>
                    <div className="flex items-center gap-3">
                      <Gift className="w-5 h-5" />
                      <span>–î–≤–æ–π–Ω—ã–µ –±–æ–Ω—É—Å—ã –≤ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è</span>
                    </div>
                    <div className="flex items-center gap-3">
                      <Percent className="w-5 h-5" />
                      <span>–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ —Å–∫–∏–¥–∫–∏ –¥–ª—è VIP</span>
                    </div>
                  </div>
                  <Button className="mt-6 bg-white text-purple-500 hover:bg-gray-100">
                    –£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ
                  </Button>
                </div>
                <div className="text-center">
                  <div className="text-8xl mb-4">üéÅ</div>
                  <p className="text-lg">–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏</p>
                </div>
              </div>
            </CardContent>
          </Card>
        </section>

        {/* –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –∞–∫—Ü–∏–∏ */}
        <section className="mb-12">
          <h2 className="text-3xl font-bold mb-8">–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –∞–∫—Ü–∏–∏</h2>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {expiredPromotions.map((promo) => (
              <Card key={promo.id} className="opacity-60">
                <CardContent className="p-6">
                  <div className="flex justify-between items-start mb-4">
                    <div className="text-4xl grayscale">{promo.image}</div>
                    <Badge variant="secondary">–ó–∞–≤–µ—Ä—à–µ–Ω–∞</Badge>
                  </div>
                  
                  <h3 className="text-xl font-semibold mb-2">{promo.title}</h3>
                  <p className="text-gray-600 mb-4">{promo.description}</p>
                  
                  <div className="space-y-2 mb-4">
                    <div className="flex items-center gap-2 text-sm text-gray-500">
                      <Clock className="w-4 h-4" />
                      –î–µ–π—Å—Ç–≤–æ–≤–∞–ª–∞ –¥–æ {new Date(promo.validUntil).toLocaleDateString('ru-RU')}
                    </div>
                  </div>
                  
                  <Button disabled className="w-full">
                    {promo.code}
                  </Button>
                </CardContent>
              </Card>
            ))}
          </div>
        </section>

        {/* –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –Ω–æ–≤–æ—Å—Ç–∏ */}
        <section>
          <Card>
            <CardContent className="p-8 text-center">
              <h2 className="text-2xl font-bold mb-4">–ù–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–µ –Ω–æ–≤—ã–µ –∞–∫—Ü–∏–∏!</h2>
              <p className="text-gray-600 mb-6">
                –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É –∏ –ø–µ—Ä–≤—ã–º–∏ —É–∑–Ω–∞–≤–∞–π—Ç–µ –æ –Ω–æ–≤—ã—Ö —Å–∫–∏–¥–∫–∞—Ö –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö
              </p>
              <div className="flex flex-col sm:flex-row gap-4 max-w-md mx-auto">
                <Input placeholder="–í–∞—à email" type="email" />
                <Button className="bg-orange-500 hover:bg-orange-600">
                  –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è
                </Button>
              </div>
              <p className="text-sm text-gray-500 mt-4">
                –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –≤–∞–∂–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏, –Ω–µ —Å–ø–∞–º–∏–º
              </p>
            </CardContent>
          </Card>
        </section>
      </div>

      <Footer />
    </div>
  );
};

export default Promotions;