import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Input } from '@/components/ui/input';
import Header from '@/components/Header';
import Footer from '@/components/Footer';
import { Search, Star, Clock, MapPin, Filter, Truck } from 'lucide-react';

const Restaurants = () => {
  const [searchTerm, setSearchTerm] = useState('');
  const [selectedCuisine, setSelectedCuisine] = useState('all');

  const cuisines = [
    { id: 'all', name: '–í—Å–µ –∫—É—Ö–Ω–∏' },
    { id: 'italian', name: '–ò—Ç–∞–ª—å—è–Ω—Å–∫–∞—è' },
    { id: 'japanese', name: '–Ø–ø–æ–Ω—Å–∫–∞—è' },
    { id: 'american', name: '–ê–º–µ—Ä–∏–∫–∞–Ω—Å–∫–∞—è' },
    { id: 'chinese', name: '–ö–∏—Ç–∞–π—Å–∫–∞—è' },
    { id: 'indian', name: '–ò–Ω–¥–∏–π—Å–∫–∞—è' },
    { id: 'mexican', name: '–ú–µ–∫—Å–∏–∫–∞–Ω—Å–∫–∞—è' },
    { id: 'thai', name: '–¢–∞–π—Å–∫–∞—è' }
  ];

  const restaurants = [
    {
      id: 1,
      name: "–ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π –¥–≤–æ—Ä–∏–∫",
      cuisine: "italian",
      rating: 4.8,
      deliveryTime: "30-40 –º–∏–Ω",
      deliveryFee: 200,
      minOrder: 800,
      image: "üè™",
      description: "–ê—É—Ç–µ–Ω—Ç–∏—á–Ω–∞—è –∏—Ç–∞–ª—å—è–Ω—Å–∫–∞—è –∫—É—Ö–Ω—è —Å —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–º–∏ —Ä–µ—Ü–µ–ø—Ç–∞–º–∏",
      specialties: ["–ü–∏—Ü—Ü–∞", "–ü–∞—Å—Ç–∞", "–†–∏–∑–æ—Ç—Ç–æ"],
      address: "—É–ª. –¢–≤–µ—Ä—Å–∫–∞—è, 15",
      isOpen: true,
      discount: 15,
      featured: true
    },
    {
      id: 2,
      name: "–°—É—à–∏ –ú–∞—Å—Ç–µ—Ä",
      cuisine: "japanese",
      rating: 4.9,
      deliveryTime: "25-35 –º–∏–Ω",
      deliveryFee: 150,
      minOrder: 1000,
      image: "üè™",
      description: "–°–≤–µ–∂–∏–µ —Å—É—à–∏ –∏ —Ä–æ–ª–ª—ã –æ—Ç —è–ø–æ–Ω—Å–∫–∏—Ö –ø–æ–≤–∞—Ä–æ–≤",
      specialties: ["–°—É—à–∏", "–†–æ–ª–ª—ã", "–°–∞—à–∏–º–∏"],
      address: "–ø—Ä. –ú–∏—Ä–∞, 45",
      isOpen: true,
      discount: 0,
      featured: true
    },
    {
      id: 3,
      name: "Burger House",
      cuisine: "american",
      rating: 4.7,
      deliveryTime: "20-30 –º–∏–Ω",
      deliveryFee: 100,
      minOrder: 600,
      image: "üè™",
      description: "–°–æ—á–Ω—ã–µ –±—É—Ä–≥–µ—Ä—ã –∏ –∫–∞—Ä—Ç–æ—Ñ–µ–ª—å —Ñ—Ä–∏ –ø–æ –∞–º–µ—Ä–∏–∫–∞–Ω—Å–∫–∏–º —Ä–µ—Ü–µ–ø—Ç–∞–º",
      specialties: ["–ë—É—Ä–≥–µ—Ä—ã", "–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å —Ñ—Ä–∏", "–ú–∏–ª–∫—à–µ–π–∫–∏"],
      address: "—É–ª. –ê—Ä–±–∞—Ç, 28",
      isOpen: true,
      discount: 20,
      featured: false
    },
    {
      id: 4,
      name: "–î—Ä–∞–∫–æ–Ω",
      cuisine: "chinese",
      rating: 4.6,
      deliveryTime: "35-45 –º–∏–Ω",
      deliveryFee: 180,
      minOrder: 900,
      image: "üè™",
      description: "–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–∞—è –∫–∏—Ç–∞–π—Å–∫–∞—è –∫—É—Ö–Ω—è —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π",
      specialties: ["–õ–∞–ø—à–∞", "–£—Ç–∫–∞ –ø–æ-–ø–µ–∫–∏–Ω—Å–∫–∏", "–î–∏–º—Å–∞–º—ã"],
      address: "—É–ª. –ö–∏—Ç–∞–π-–≥–æ—Ä–æ–¥, 12",
      isOpen: false,
      discount: 0,
      featured: false
    },
    {
      id: 5,
      name: "–¢–∞–¥–∂ –ú–∞—Ö–∞–ª",
      cuisine: "indian",
      rating: 4.5,
      deliveryTime: "40-50 –º–∏–Ω",
      deliveryFee: 220,
      minOrder: 1200,
      image: "üè™",
      description: "–û—Å—Ç—Ä—ã–µ –∏ –∞—Ä–æ–º–∞—Ç–Ω—ã–µ –±–ª—é–¥–∞ –∏–Ω–¥–∏–π—Å–∫–æ–π –∫—É—Ö–Ω–∏",
      specialties: ["–ö–∞—Ä—Ä–∏", "–ù–∞–∞–Ω", "–ë–∏—Ä—å—è–Ω–∏"],
      address: "—É–ª. –ò–Ω–¥–∏–π—Å–∫–∞—è, 7",
      isOpen: true,
      discount: 10,
      featured: false
    },
    {
      id: 6,
      name: "–ú–µ–∫—Å–∏–∫–∞–Ω—Å–∫–∏–π –¥–æ–º",
      cuisine: "mexican",
      rating: 4.4,
      deliveryTime: "30-40 –º–∏–Ω",
      deliveryFee: 160,
      minOrder: 700,
      image: "üè™",
      description: "–û—Å—Ç—Ä–∞—è –º–µ–∫—Å–∏–∫–∞–Ω—Å–∫–∞—è –µ–¥–∞ —Å –Ω–∞—Å—Ç–æ—è—â–∏–º–∏ —Å–ø–µ—Ü–∏—è–º–∏",
      specialties: ["–¢–∞–∫–æ", "–ë—É—Ä—Ä–∏—Ç–æ", "–ù–∞—á–æ—Å"],
      address: "—É–ª. –ú–µ–∫—Å–∏–∫–∞–Ω—Å–∫–∞—è, 33",
      isOpen: true,
      discount: 0,
      featured: false
    },
    {
      id: 7,
      name: "–¢–∞–π—Å–∫–∏–π —Å–∞–¥",
      cuisine: "thai",
      rating: 4.7,
      deliveryTime: "35-45 –º–∏–Ω",
      deliveryFee: 190,
      minOrder: 850,
      image: "üè™",
      description: "–≠–∫–∑–æ—Ç–∏—á–µ—Å–∫–∏–µ –±–ª—é–¥–∞ —Ç–∞–π—Å–∫–æ–π –∫—É—Ö–Ω–∏",
      specialties: ["–¢–æ–º —è–º", "–ü–∞–¥ —Ç–∞–π", "–ö–∞—Ä—Ä–∏"],
      address: "—É–ª. –¢–∞–π—Å–∫–∞—è, 21",
      isOpen: true,
      discount: 5,
      featured: true
    },
    {
      id: 8,
      name: "–ü–∏—Ü—Ü–µ—Ä–∏—è –ù–µ–∞–ø–æ–ª—å",
      cuisine: "italian",
      rating: 4.6,
      deliveryTime: "25-35 –º–∏–Ω",
      deliveryFee: 120,
      minOrder: 500,
      image: "üè™",
      description: "–ù–∞—Å—Ç–æ—è—â–∞—è –Ω–µ–∞–ø–æ–ª–∏—Ç–∞–Ω—Å–∫–∞—è –ø–∏—Ü—Ü–∞ –Ω–∞ —Ç–æ–Ω–∫–æ–º —Ç–µ—Å—Ç–µ",
      specialties: ["–ü–∏—Ü—Ü–∞", "–ö–∞–ª—å—Ü–æ–Ω–µ", "–ê–Ω—Ç–∏–ø–∞—Å—Ç–∏"],
      address: "—É–ª. –ù–µ–∞–ø–æ–ª–∏—Ç–∞–Ω—Å–∫–∞—è, 8",
      isOpen: true,
      discount: 25,
      featured: false
    }
  ];

  const filteredRestaurants = restaurants.filter(restaurant => {
    const matchesSearch = restaurant.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
                         restaurant.description.toLowerCase().includes(searchTerm.toLowerCase());
    const matchesCuisine = selectedCuisine === 'all' || restaurant.cuisine === selectedCuisine;
    return matchesSearch && matchesCuisine;
  });

  const featuredRestaurants = restaurants.filter(r => r.featured);

  return (
    <div className="min-h-screen bg-gray-50">
      <Header />
      
      <div className="container mx-auto px-4 py-8">
        <div className="mb-8">
          <h1 className="text-4xl font-bold mb-4">–†–µ—Å—Ç–æ—Ä–∞–Ω—ã</h1>
          <p className="text-gray-600 text-lg">–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω –∏ –∑–∞–∫–∞–∂–∏—Ç–µ –ª—é–±–∏–º—ã–µ –±–ª—é–¥–∞</p>
        </div>

        {/* –ü–æ–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä—ã */}
        <div className="mb-8">
          <div className="flex flex-col lg:flex-row gap-4 mb-6">
            <div className="relative flex-1">
              <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5" />
              <Input
                placeholder="–ü–æ–∏—Å–∫ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤..."
                value={searchTerm}
                onChange={(e) => setSearchTerm(e.target.value)}
                className="pl-10"
              />
            </div>
            <Button variant="outline" className="lg:w-auto">
              <Filter className="w-4 h-4 mr-2" />
              –§–∏–ª—å—Ç—Ä—ã
            </Button>
          </div>

          {/* –ö—É—Ö–Ω–∏ */}
          <div className="flex flex-wrap gap-2">
            {cuisines.map((cuisine) => (
              <Button
                key={cuisine.id}
                variant={selectedCuisine === cuisine.id ? "default" : "outline"}
                onClick={() => setSelectedCuisine(cuisine.id)}
                className={selectedCuisine === cuisine.id ? "bg-orange-500 hover:bg-orange-600" : ""}
              >
                {cuisine.name}
              </Button>
            ))}
          </div>
        </div>

        {/* –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã */}
        {selectedCuisine === 'all' && (
          <div className="mb-12">
            <h2 className="text-2xl font-bold mb-6">–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã</h2>
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              {featuredRestaurants.map((restaurant) => (
                <Card key={restaurant.id} className="hover:shadow-lg transition-shadow">
                  <CardContent className="p-6">
                    <div className="flex justify-between items-start mb-4">
                      <div className="text-6xl">{restaurant.image}</div>
                      <div className="flex flex-col gap-2">
                        <Badge className="bg-blue-100 text-blue-800">–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º</Badge>
                        {restaurant.discount > 0 && (
                          <Badge className="bg-red-100 text-red-800">-{restaurant.discount}%</Badge>
                        )}
                      </div>
                    </div>
                    
                    <div className="mb-3">
                      <h3 className="text-xl font-semibold mb-1">{restaurant.name}</h3>
                      <p className="text-gray-600 text-sm">{restaurant.description}</p>
                    </div>

                    <div className="flex items-center justify-between mb-3">
                      <div className="flex items-center">
                        <Star className="w-4 h-4 text-yellow-400 fill-current" />
                        <span className="ml-1 text-sm font-medium">{restaurant.rating}</span>
                      </div>
                      <div className="flex items-center text-sm text-gray-600">
                        <Clock className="w-4 h-4 mr-1" />
                        {restaurant.deliveryTime}
                      </div>
                    </div>

                    <div className="mb-4">
                      <div className="flex items-center text-sm text-gray-600 mb-1">
                        <MapPin className="w-4 h-4 mr-1" />
                        {restaurant.address}
                      </div>
                      <div className="flex items-center text-sm text-gray-600">
                        <Truck className="w-4 h-4 mr-1" />
                        –î–æ—Å—Ç–∞–≤–∫–∞ {restaurant.deliveryFee}‚ÇΩ ‚Ä¢ –ú–∏–Ω. –∑–∞–∫–∞–∑ {restaurant.minOrder}‚ÇΩ
                      </div>
                    </div>

                    <div className="mb-4">
                      <p className="text-sm text-gray-500 mb-1">–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è:</p>
                      <div className="flex flex-wrap gap-1">
                        {restaurant.specialties.map((specialty, index) => (
                          <Badge key={index} variant="outline" className="text-xs">
                            {specialty}
                          </Badge>
                        ))}
                      </div>
                    </div>

                    <Button 
                      className="w-full bg-orange-500 hover:bg-orange-600"
                      disabled={!restaurant.isOpen}
                    >
                      {restaurant.isOpen ? '–ü–µ—Ä–µ–π—Ç–∏ –≤ –º–µ–Ω—é' : '–ó–∞–∫—Ä—ã—Ç–æ'}
                    </Button>
                  </CardContent>
                </Card>
              ))}
            </div>
          </div>
        )}

        {/* –í—Å–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã */}
        <div>
          <h2 className="text-2xl font-bold mb-6">
            {selectedCuisine === 'all' ? '–í—Å–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã' : `${cuisines.find(c => c.id === selectedCuisine)?.name} –∫—É—Ö–Ω—è`}
            <span className="text-gray-500 font-normal ml-2">({filteredRestaurants.length})</span>
          </h2>
          
          {filteredRestaurants.length === 0 ? (
            <div className="text-center py-12">
              <p className="text-gray-500 text-lg">–†–µ—Å—Ç–æ—Ä–∞–Ω—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</p>
              <p className="text-gray-400">–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –∫—É—Ö–Ω—é</p>
            </div>
          ) : (
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              {filteredRestaurants.map((restaurant) => (
                <Card key={restaurant.id} className="hover:shadow-lg transition-shadow">
                  <CardContent className="p-6">
                    <div className="flex justify-between items-start mb-4">
                      <div className="text-6xl">{restaurant.image}</div>
                      <div className="flex flex-col gap-2">
                        {restaurant.featured && (
                          <Badge className="bg-blue-100 text-blue-800">–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º</Badge>
                        )}
                        {restaurant.discount > 0 && (
                          <Badge className="bg-red-100 text-red-800">-{restaurant.discount}%</Badge>
                        )}
                        {!restaurant.isOpen && (
                          <Badge variant="secondary">–ó–∞–∫—Ä—ã—Ç–æ</Badge>
                        )}
                      </div>
                    </div>
                    
                    <div className="mb-3">
                      <h3 className="text-xl font-semibold mb-1">{restaurant.name}</h3>
                      <p className="text-gray-600 text-sm">{restaurant.description}</p>
                    </div>

                    <div className="flex items-center justify-between mb-3">
                      <div className="flex items-center">
                        <Star className="w-4 h-4 text-yellow-400 fill-current" />
                        <span className="ml-1 text-sm font-medium">{restaurant.rating}</span>
                      </div>
                      <div className="flex items-center text-sm text-gray-600">
                        <Clock className="w-4 h-4 mr-1" />
                        {restaurant.deliveryTime}
                      </div>
                    </div>

                    <div className="mb-4">
                      <div className="flex items-center text-sm text-gray-600 mb-1">
                        <MapPin className="w-4 h-4 mr-1" />
                        {restaurant.address}
                      </div>
                      <div className="flex items-center text-sm text-gray-600">
                        <Truck className="w-4 h-4 mr-1" />
                        –î–æ—Å—Ç–∞–≤–∫–∞ {restaurant.deliveryFee}‚ÇΩ ‚Ä¢ –ú–∏–Ω. –∑–∞–∫–∞–∑ {restaurant.minOrder}‚ÇΩ
                      </div>
                    </div>

                    <div className="mb-4">
                      <p className="text-sm text-gray-500 mb-1">–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è:</p>
                      <div className="flex flex-wrap gap-1">
                        {restaurant.specialties.map((specialty, index) => (
                          <Badge key={index} variant="outline" className="text-xs">
                            {specialty}
                          </Badge>
                        ))}
                      </div>
                    </div>

                    <Button 
                      className="w-full bg-orange-500 hover:bg-orange-600"
                      disabled={!restaurant.isOpen}
                    >
                      {restaurant.isOpen ? '–ü–µ—Ä–µ–π—Ç–∏ –≤ –º–µ–Ω—é' : '–ó–∞–∫—Ä—ã—Ç–æ'}
                    </Button>
                  </CardContent>
                </Card>
              ))}
            </div>
          )}
        </div>
      </div>

      <Footer />
    </div>
  );
};

export default Restaurants;