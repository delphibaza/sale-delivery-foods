import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Input } from '@/components/ui/input';
import Header from '@/components/Header';
import Footer from '@/components/Footer';
import { Search, Star, Plus, Filter } from 'lucide-react';

const Menu = () => {
  const [searchTerm, setSearchTerm] = useState('');
  const [selectedCategory, setSelectedCategory] = useState('all');

  const categories = [
    { id: 'all', name: '–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏' },
    { id: 'pizza', name: '–ü–∏—Ü—Ü–∞' },
    { id: 'sushi', name: '–°—É—à–∏' },
    { id: 'burgers', name: '–ë—É—Ä–≥–µ—Ä—ã' },
    { id: 'pasta', name: '–ü–∞—Å—Ç–∞' },
    { id: 'salads', name: '–°–∞–ª–∞—Ç—ã' },
    { id: 'desserts', name: '–î–µ—Å–µ—Ä—Ç—ã' },
    { id: 'drinks', name: '–ù–∞–ø–∏—Ç–∫–∏' }
  ];

  const menuItems = [
    {
      id: 1,
      name: "–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞",
      category: "pizza",
      price: 890,
      image: "üçï",
      rating: 4.8,
      description: "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –ø–∏—Ü—Ü–∞ —Å —Ç–æ–º–∞—Ç–∞–º–∏, –º–æ—Ü–∞—Ä–µ–ª–ª–æ–π –∏ –±–∞–∑–∏–ª–∏–∫–æ–º",
      ingredients: ["–¢–µ—Å—Ç–æ", "–¢–æ–º–∞—Ç–Ω—ã–π —Å–æ—É—Å", "–ú–æ—Ü–∞—Ä–µ–ª–ª–∞", "–ë–∞–∑–∏–ª–∏–∫"],
      popular: true
    },
    {
      id: 2,
      name: "–ü–µ–ø–ø–µ—Ä–æ–Ω–∏",
      category: "pizza",
      price: 1190,
      image: "üçï",
      rating: 4.9,
      description: "–û—Å—Ç—Ä–∞—è –ø–∏—Ü—Ü–∞ —Å –ø–µ–ø–ø–µ—Ä–æ–Ω–∏ –∏ —Å—ã—Ä–æ–º –º–æ—Ü–∞—Ä–µ–ª–ª–∞",
      ingredients: ["–¢–µ—Å—Ç–æ", "–¢–æ–º–∞—Ç–Ω—ã–π —Å–æ—É—Å", "–ú–æ—Ü–∞—Ä–µ–ª–ª–∞", "–ü–µ–ø–ø–µ—Ä–æ–Ω–∏"],
      popular: true
    },
    {
      id: 3,
      name: "–§–∏–ª–∞–¥–µ–ª—å—Ñ–∏—è",
      category: "sushi",
      price: 650,
      image: "üç£",
      rating: 4.9,
      description: "–†–æ–ª–ª—ã —Å –ª–æ—Å–æ—Å–µ–º, —Å–ª–∏–≤–æ—á–Ω—ã–º —Å—ã—Ä–æ–º –∏ –æ–≥—É—Ä—Ü–æ–º",
      ingredients: ["–†–∏—Å", "–ù–æ—Ä–∏", "–õ–æ—Å–æ—Å—å", "–°–ª–∏–≤–æ—á–Ω—ã–π —Å—ã—Ä", "–û–≥—É—Ä–µ—Ü"],
      popular: true
    },
    {
      id: 4,
      name: "–ö–∞–ª–∏—Ñ–æ—Ä–Ω–∏—è",
      category: "sushi",
      price: 590,
      image: "üç£",
      rating: 4.7,
      description: "–†–æ–ª–ª—ã —Å –∫—Ä–∞–±–æ–º, –∞–≤–æ–∫–∞–¥–æ –∏ –æ–≥—É—Ä—Ü–æ–º",
      ingredients: ["–†–∏—Å", "–ù–æ—Ä–∏", "–ö—Ä–∞–±", "–ê–≤–æ–∫–∞–¥–æ", "–û–≥—É—Ä–µ—Ü"],
      popular: false
    },
    {
      id: 5,
      name: "–ß–∏–∑–±—É—Ä–≥–µ—Ä",
      category: "burgers",
      price: 450,
      image: "üçî",
      rating: 4.7,
      description: "–°–æ—á–Ω—ã–π –±—É—Ä–≥–µ—Ä —Å –≥–æ–≤—è–∂—å–µ–π –∫–æ—Ç–ª–µ—Ç–æ–π –∏ —Å—ã—Ä–æ–º",
      ingredients: ["–ë—É–ª–æ—á–∫–∞", "–ì–æ–≤—è–¥–∏–Ω–∞", "–°—ã—Ä", "–°–∞–ª–∞—Ç", "–¢–æ–º–∞—Ç"],
      popular: true
    },
    {
      id: 6,
      name: "–ë–∏–≥ –ë—É—Ä–≥–µ—Ä",
      category: "burgers",
      price: 690,
      image: "üçî",
      rating: 4.8,
      description: "–î–≤–æ–π–Ω–æ–π –±—É—Ä–≥–µ—Ä —Å –¥–≤—É–º—è –∫–æ—Ç–ª–µ—Ç–∞–º–∏ –∏ –±–µ–∫–æ–Ω–æ–º",
      ingredients: ["–ë—É–ª–æ—á–∫–∞", "–ì–æ–≤—è–¥–∏–Ω–∞ x2", "–ë–µ–∫–æ–Ω", "–°—ã—Ä", "–°–∞–ª–∞—Ç"],
      popular: false
    },
    {
      id: 7,
      name: "–ö–∞—Ä–±–æ–Ω–∞—Ä–∞",
      category: "pasta",
      price: 520,
      image: "üçù",
      rating: 4.6,
      description: "–ü–∞—Å—Ç–∞ —Å –±–µ–∫–æ–Ω–æ–º, —è–π—Ü–æ–º –∏ —Å—ã—Ä–æ–º –ø–∞—Ä–º–µ–∑–∞–Ω",
      ingredients: ["–°–ø–∞–≥–µ—Ç—Ç–∏", "–ë–µ–∫–æ–Ω", "–Ø–π—Ü–æ", "–ü–∞—Ä–º–µ–∑–∞–Ω", "–°–ª–∏–≤–∫–∏"],
      popular: false
    },
    {
      id: 8,
      name: "–¶–µ–∑–∞—Ä—å",
      category: "salads",
      price: 390,
      image: "ü•ó",
      rating: 4.5,
      description: "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π —Å–∞–ª–∞—Ç —Å –∫—É—Ä–∏—Ü–µ–π –∏ —Å–æ—É—Å–æ–º —Ü–µ–∑–∞—Ä—å",
      ingredients: ["–°–∞–ª–∞—Ç", "–ö—É—Ä–∏—Ü–∞", "–°—É—Ö–∞—Ä–∏–∫–∏", "–ü–∞—Ä–º–µ–∑–∞–Ω", "–°–æ—É—Å —Ü–µ–∑–∞—Ä—å"],
      popular: false
    },
    {
      id: 9,
      name: "–¢–∏—Ä–∞–º–∏—Å—É",
      category: "desserts",
      price: 290,
      image: "üç∞",
      rating: 4.8,
      description: "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –∏—Ç–∞–ª—å—è–Ω—Å–∫–∏–π –¥–µ—Å–µ—Ä—Ç —Å –∫–æ—Ñ–µ",
      ingredients: ["–ú–∞—Å–∫–∞—Ä–ø–æ–Ω–µ", "–°–∞–≤–æ—è—Ä–¥–∏", "–ö–æ—Ñ–µ", "–ö–∞–∫–∞–æ"],
      popular: false
    },
    {
      id: 10,
      name: "–ö–æ–∫–∞-–ö–æ–ª–∞",
      category: "drinks",
      price: 120,
      image: "ü•§",
      rating: 4.3,
      description: "–û—Å–≤–µ–∂–∞—é—â–∏–π –≥–∞–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –Ω–∞–ø–∏—Ç–æ–∫ 0.5–ª",
      ingredients: ["–ì–∞–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤–æ–¥–∞", "–°–∞—Ö–∞—Ä", "–ö–æ—Ñ–µ–∏–Ω"],
      popular: false
    }
  ];

  const filteredItems = menuItems.filter(item => {
    const matchesSearch = item.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
                         item.description.toLowerCase().includes(searchTerm.toLowerCase());
    const matchesCategory = selectedCategory === 'all' || item.category === selectedCategory;
    return matchesSearch && matchesCategory;
  });

  return (
    <div className="min-h-screen bg-gray-50">
      <Header />
      
      <div className="container mx-auto px-4 py-8">
        <div className="mb-8">
          <h1 className="text-4xl font-bold mb-4">–ú–µ–Ω—é</h1>
          <p className="text-gray-600 text-lg">–í—ã–±–µ—Ä–∏—Ç–µ –ª—é–±–∏–º—ã–µ –±–ª—é–¥–∞ –∏–∑ –Ω–∞—à–µ–≥–æ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω–æ–≥–æ –º–µ–Ω—é</p>
        </div>

        {/* –ü–æ–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä—ã */}
        <div className="mb-8">
          <div className="flex flex-col lg:flex-row gap-4 mb-6">
            <div className="relative flex-1">
              <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5" />
              <Input
                placeholder="–ü–æ–∏—Å–∫ –±–ª—é–¥..."
                value={searchTerm}
                onChange={(e) => setSearchTerm(e.target.value)}
                className="pl-10"
              />
            </div>
            <Button variant="outline" className="lg:w-auto">
              <Filter className="w-4 h-4 mr-2" />
              –§–∏–ª—å—Ç—Ä—ã
            </Button>
          </div>

          {/* –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ */}
          <div className="flex flex-wrap gap-2">
            {categories.map((category) => (
              <Button
                key={category.id}
                variant={selectedCategory === category.id ? "default" : "outline"}
                onClick={() => setSelectedCategory(category.id)}
                className={selectedCategory === category.id ? "bg-orange-500 hover:bg-orange-600" : ""}
              >
                {category.name}
              </Button>
            ))}
          </div>
        </div>

        {/* –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –±–ª—é–¥–∞ */}
        {selectedCategory === 'all' && (
          <div className="mb-12">
            <h2 className="text-2xl font-bold mb-6">–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –±–ª—é–¥–∞</h2>
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              {menuItems.filter(item => item.popular).map((item) => (
                <Card key={item.id} className="hover:shadow-lg transition-shadow">
                  <CardContent className="p-6">
                    <div className="flex justify-between items-start mb-4">
                      <div className="text-6xl">{item.image}</div>
                      <Badge className="bg-red-100 text-red-800">–ü–æ–ø—É–ª—è—Ä–Ω–æ–µ</Badge>
                    </div>
                    <div className="flex justify-between items-start mb-2">
                      <h3 className="text-xl font-semibold">{item.name}</h3>
                      <span className="text-xl font-bold text-orange-500">{item.price}‚ÇΩ</span>
                    </div>
                    <div className="flex items-center mb-3">
                      <Star className="w-4 h-4 text-yellow-400 fill-current" />
                      <span className="ml-1 text-sm text-gray-600">{item.rating}</span>
                    </div>
                    <p className="text-gray-600 mb-4">{item.description}</p>
                    <div className="mb-4">
                      <p className="text-sm text-gray-500 mb-1">–°–æ—Å—Ç–∞–≤:</p>
                      <p className="text-sm text-gray-600">{item.ingredients.join(', ')}</p>
                    </div>
                    <Button className="w-full bg-orange-500 hover:bg-orange-600">
                      <Plus className="w-4 h-4 mr-2" />
                      –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É
                    </Button>
                  </CardContent>
                </Card>
              ))}
            </div>
          </div>
        )}

        {/* –í—Å–µ –±–ª—é–¥–∞ */}
        <div>
          <h2 className="text-2xl font-bold mb-6">
            {selectedCategory === 'all' ? '–í—Å–µ –±–ª—é–¥–∞' : categories.find(c => c.id === selectedCategory)?.name}
            <span className="text-gray-500 font-normal ml-2">({filteredItems.length})</span>
          </h2>
          
          {filteredItems.length === 0 ? (
            <div className="text-center py-12">
              <p className="text-gray-500 text-lg">–ë–ª—é–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</p>
              <p className="text-gray-400">–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é</p>
            </div>
          ) : (
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              {filteredItems.map((item) => (
                <Card key={item.id} className="hover:shadow-lg transition-shadow">
                  <CardContent className="p-6">
                    <div className="flex justify-between items-start mb-4">
                      <div className="text-6xl">{item.image}</div>
                      {item.popular && (
                        <Badge className="bg-red-100 text-red-800">–ü–æ–ø—É–ª—è—Ä–Ω–æ–µ</Badge>
                      )}
                    </div>
                    <div className="flex justify-between items-start mb-2">
                      <h3 className="text-xl font-semibold">{item.name}</h3>
                      <span className="text-xl font-bold text-orange-500">{item.price}‚ÇΩ</span>
                    </div>
                    <div className="flex items-center mb-3">
                      <Star className="w-4 h-4 text-yellow-400 fill-current" />
                      <span className="ml-1 text-sm text-gray-600">{item.rating}</span>
                    </div>
                    <p className="text-gray-600 mb-4">{item.description}</p>
                    <div className="mb-4">
                      <p className="text-sm text-gray-500 mb-1">–°–æ—Å—Ç–∞–≤:</p>
                      <p className="text-sm text-gray-600">{item.ingredients.join(', ')}</p>
                    </div>
                    <Button className="w-full bg-orange-500 hover:bg-orange-600">
                      <Plus className="w-4 h-4 mr-2" />
                      –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É
                    </Button>
                  </CardContent>
                </Card>
              ))}
            </div>
          )}
        </div>
      </div>

      <Footer />
    </div>
  );
};

export default Menu;